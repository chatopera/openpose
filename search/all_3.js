var searchData=
[
  ['data_5fat',['data_at',['../classop_1_1_array_cpu_gpu.html#ab43bb995b962dfc6f1de717e77978d84',1,'op::ArrayCpuGpu']]],
  ['dataformat',['DataFormat',['../namespaceop.html#ae52c21a24cf2c21e3b419c127924fd7e',1,'op']]],
  ['dataformattostring',['dataFormatToString',['../namespaceop.html#a9d121f33179e41075f4602eb6527e658',1,'op']]],
  ['datum',['Datum',['../structop_1_1_datum.html',1,'op']]],
  ['datum',['Datum',['../structop_1_1_datum.html#a72c75834671aebe44705738fb5efc3c5',1,'op::Datum::Datum()'],['../structop_1_1_datum.html#a42f9aef848c6335c5a81cad374319f0b',1,'op::Datum::Datum(const Datum &amp;datum)'],['../structop_1_1_datum.html#a2d4940d8cb12d95b8588cd0280f6524c',1,'op::Datum::Datum(Datum &amp;&amp;datum)']]],
  ['datum_2ehpp',['datum.hpp',['../datum_8hpp.html',1,'']]],
  ['datumproducer',['DatumProducer',['../classop_1_1_datum_producer.html',1,'op']]],
  ['datumproducer',['DatumProducer',['../classop_1_1_datum_producer.html#a4d52ee6961e2c5c9564f49d203a2865e',1,'op::DatumProducer']]],
  ['datumproducer_2ehpp',['datumProducer.hpp',['../datum_producer_8hpp.html',1,'']]],
  ['deallocate',['deallocate',['../classcl_1_1_s_v_m_allocator.html#a695f4693c4245c66285e7f4a0405cf84',1,'cl::SVMAllocator']]],
  ['default_5fx',['DEFAULT_X',['../classop_1_1_profiler.html#a13de5fe55b2599c0626d5071d3851dec',1,'op::Profiler']]],
  ['defaultparttorender',['defaultPartToRender',['../structop_1_1_wrapper_struct_pose.html#ab6810e97aa62a728aa09dbbe6b9b6c06',1,'op::WrapperStructPose']]],
  ['define_5fbool',['DEFINE_bool',['../flags_8hpp.html#a035ba7d578f36103d096569f1984ab61',1,'DEFINE_bool(disable_multi_thread, false,&quot;It would slightly reduce the frame rate in order to highly reduce the lag. Mainly useful&quot;&quot; for 1) Cases where it is needed a low latency (e.g., webcam in real-time scenarios with&quot;&quot; low-range GPU devices); and 2) Debugging OpenPose when it is crashing to locate the&quot;&quot; error.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a7fc3e871114ac35447499ffda035d51e',1,'DEFINE_bool(flir_camera, false,&quot;Whether to use FLIR (Point-Grey) stereo camera.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a9d45877ef21b9042f1b307d23d404e40',1,'DEFINE_bool(frame_flip, false,&quot;Flip/mirror each frame (e.g., for real time webcam demonstrations).&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a6a501f229de1ba19801b77fd0565527b',1,'DEFINE_bool(frames_repeat, false,&quot;Repeat frames when finished.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a5e350d38962a702d8e0c658fbbb5cc64',1,'DEFINE_bool(process_real_time, false,&quot;Enable to keep the original source frame rate (e.g., for video). If the processing time is&quot;&quot; too long, it will skip frames. If it is too fast, it will slow it down.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a902887e5226d9d2a0ce312f25eab3783',1,'DEFINE_bool(frame_undistort, false,&quot;If false (default), it will not undistort the image, if true, it will undistortionate them&quot;&quot; based on the camera parameters found in `camera_parameter_path`&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a8d76e63210ddd6541cb8b030df0c09cf',1,'DEFINE_bool(maximize_positives, false,&quot;It reduces the thresholds to accept a person candidate. It highly increases both false and&quot;&quot; true positives. I.e., it maximizes average recall but could harm average precision.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a669c6f4820af0275f40808b18147b98c',1,'DEFINE_bool(heatmaps_add_parts, false,&quot;If true, it will fill op::Datum::poseHeatMaps array with the body part heatmaps, and&quot;&quot; analogously face &amp; hand heatmaps to op::Datum::faceHeatMaps &amp; op::Datum::handHeatMaps.&quot;&quot; If more than one `add_heatmaps_X` flag is enabled, it will place then in sequential&quot;&quot; memory order: body parts + bkg + PAFs. It will follow the order on&quot;&quot; POSE_BODY_PART_MAPPING in `src/openpose/pose/poseParameters.cpp`. Program speed will&quot;&quot; considerably decrease. Not required for OpenPose, enable it only if you intend to&quot;&quot; explicitly use this information later.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#af57ca90aafa15b707af299527b0aff6f',1,'DEFINE_bool(heatmaps_add_bkg, false,&quot;Same functionality as `add_heatmaps_parts`, but adding the heatmap corresponding to&quot;&quot; background.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#ac881df85c5be736d05822ad98ac0496f',1,'DEFINE_bool(heatmaps_add_PAFs, false,&quot;Same functionality as `add_heatmaps_parts`, but adding the PAFs.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#ab30cdb2253e3ea76aa474424e87075eb',1,'DEFINE_bool(part_candidates, false,&quot;Also enable `write_json` in order to save this information. If true, it will fill the&quot;&quot; op::Datum::poseCandidates array with the body part candidates. Candidates refer to all&quot;&quot; the detected body parts, before being assembled into people. Note that the number of&quot;&quot; candidates is equal or higher than the number of final body parts (i.e., after being&quot;&quot; assembled into people). The empty body parts are filled with 0s. Program speed will&quot;&quot; slightly decrease. Not required for OpenPose, enable it only if you intend to explicitly&quot;&quot; use this information.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#aea11a0489c2af278990d3ddff10960fd',1,'DEFINE_bool(face, false,&quot;Enables face keypoint detection. It will share some parameters from the body pose, e.g.&quot;&quot; `model_folder`. Note that this will considerable slow down the performance and increse&quot;&quot; the required GPU memory. In addition, the greater number of people on the image, the&quot;&quot; slower OpenPose will be.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a4da8f1bc0afb58f2a757ab6d90c6042e',1,'DEFINE_bool(hand, false,&quot;Enables hand keypoint detection. It will share some parameters from the body pose, e.g.&quot;&quot; `model_folder`. Analogously to `--face`, it will also slow down the performance, increase&quot;&quot; the required GPU memory and its speed depends on the number of people.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a4c800b6a91b02874d006da33ab8432cd',1,'DEFINE_bool(3d, false,&quot;Running OpenPose 3-D reconstruction demo: 1) Reading from a stereo camera system.&quot;&quot; 2) Performing 3-D reconstruction from the multiple views. 3) Displaying 3-D reconstruction&quot;&quot; results. Note that it will only display 1 person. If multiple people is present, it will&quot;&quot; fail.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#ac210b56a3c46ff06143a62b0bb725cc6',1,'DEFINE_bool(identification, false,&quot;Experimental, not available yet. Whether to enable people identification across frames.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a1a9ffc302eac69c8ba024da3edf01a5f',1,'DEFINE_bool(disable_blending, false,&quot;If enabled, it will render the results (keypoint skeletons or heatmaps) on a black&quot;&quot; background, instead of being rendered into the original image. Related: `part_to_show`,&quot;&quot; `alpha_pose`, and `alpha_pose`.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a231bec7b2113f31cebb760c849ca2841',1,'DEFINE_bool(fullscreen, false,&quot;Run in full-screen mode (press f during runtime to toggle).&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a0ee4f86d572ef52ec26dcbb37efb5e65',1,'DEFINE_bool(no_gui_verbose, false,&quot;Do not write text on output images on GUI (e.g., number of current frame and people). It&quot;&quot; does not affect the pose rendering.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a7146f6e8f74d907366d18112d8365d43',1,'DEFINE_bool(write_video_with_audio, false,&quot;If the input is video and the output is so too, it will save the video with audio. It&quot;&quot; requires the output video file path finishing in `.mp4` format (see `write_video` for&quot;&quot; details).&quot;):&#160;flags.hpp']]],
  ['define_5fdouble',['DEFINE_double',['../flags_8hpp.html#a320155394ec7dc55029373d79fd12ca5',1,'DEFINE_double(fps_max,-1.,&quot;Maximum processing frame rate. By default (-1), OpenPose will process frames as fast as&quot;&quot; possible. Example usage: If OpenPose is displaying images too quickly, this can reduce&quot;&quot; the speed so the user can analyze better each frame from the GUI.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#ad4f694abe15c709a38d761897178410c',1,'DEFINE_double(scale_gap, 0.25,&quot;Scale gap between scales. No effect unless scale_number &gt; 1. Initial scale is always 1.&quot;&quot; If you want to change the initial scale, you actually want to multiply the&quot;&quot; `net_resolution` by your desired initial scale.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#aab65677abcd54f2837d6dd01dbc32ed6',1,'DEFINE_double(upsampling_ratio, 0.,&quot;Upsampling ratio between the `net_resolution` and the output net results. A value less&quot;&quot; or equal than 0 (default) will use the network default value (recommended).&quot;):&#160;flags.hpp'],['../flags_8hpp.html#abf5c8a05ae8f86c8e4d8eedbceb84516',1,'DEFINE_double(hand_scale_range, 0.4,&quot;Analogous purpose than `scale_gap` but applied to the hand keypoint detector. Total range&quot;&quot; between smallest and biggest scale. The scales will be centered in ratio 1. E.g., if&quot;&quot; scaleRange = 0.4 and scalesNumber = 2, then there will be 2 scales, 0.8 and 1.2.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a3a00f877d52f489ed93fb0db8cb8e4dc',1,'DEFINE_double(render_threshold, 0.05,&quot;Only estimated keypoints whose score confidences are higher than this threshold will be&quot;&quot; rendered. Generally, a high threshold (&gt; 0.5) will only render very clear body parts;&quot;&quot; while small thresholds (~0.1) will also output guessed and occluded keypoints, but also&quot;&quot; more false positives (i.e., wrong detections).&quot;):&#160;flags.hpp'],['../flags_8hpp.html#ad971ae1068651177e7a78ae68c022792',1,'DEFINE_double(alpha_pose, 0.6,&quot;Blending factor (range 0-1) for the body part rendering. 1 will show it completely, 0 will&quot;&quot; hide it. Only valid for GPU rendering.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a62bfc56794bb8ceaedd0eb7bc32a0f22',1,'DEFINE_double(alpha_heatmap, 0.7,&quot;Blending factor (range 0-1) between heatmap and original frame. 1 will only show the&quot;&quot; heatmap, 0 will only show the frame. Only valid for GPU rendering.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a53eb4c15af968876f31ca0be54d251b3',1,'DEFINE_double(face_render_threshold, 0.4,&quot;Analogous to `render_threshold`, but applied to the face keypoints.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#af654373ad667b1683f30e350331ea709',1,'DEFINE_double(face_alpha_pose, 0.6,&quot;Analogous to `alpha_pose` but applied to face.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a71043931875d1f5ec677fd69ae96c632',1,'DEFINE_double(face_alpha_heatmap, 0.7,&quot;Analogous to `alpha_heatmap` but applied to face.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a6b12d681ace972ae8eede484505c50af',1,'DEFINE_double(hand_render_threshold, 0.2,&quot;Analogous to `render_threshold`, but applied to the hand keypoints.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a890b2b8df8a57fe4e9baa465c6584ccf',1,'DEFINE_double(hand_alpha_pose, 0.6,&quot;Analogous to `alpha_pose` but applied to hand.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#ac17a7af1030d7f5bd69672fec961c083',1,'DEFINE_double(hand_alpha_heatmap, 0.7,&quot;Analogous to `alpha_heatmap` but applied to hand.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a2fe410b6a4ab2577d0f513f5bef78699',1,'DEFINE_double(cli_verbose,-1.f,&quot;If -1, it will be disabled (default). If it is a positive integer number, it will print on&quot;&quot; the command line every `verbose` frames. If number in the range (0,1), it will print the&quot;&quot; progress every `verbose` times the total of frames.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#aba34d451bc7a9409cdb246e1d945b451',1,'DEFINE_double(write_video_fps,-1.,&quot;Frame rate for the recorded video. By default, it will try to get the input frames producer&quot;&quot; frame rate (e.g., input video or webcam frame rate). If the input frames producer does not&quot;&quot; have a set FPS (e.g., image_dir or webcam if OpenCV not compiled with its support), set&quot;&quot; this value accordingly (e.g., to the frame rate displayed by the OpenPose GUI).&quot;):&#160;flags.hpp']]],
  ['define_5fint32',['DEFINE_int32',['../flags_8hpp.html#a73ee51843ead02ee6358fe39dcbeffde',1,'DEFINE_int32(logging_level, 3,&quot;The logging level. Integer in the range [0, 255]. 0 will output any log() message, while&quot;&quot; 255 will not output any. Current OpenPose library messages are in the range 0-4: 1 for&quot;&quot; low priority messages and 4 for important ones.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a8e9de971b409cfe7fdded7f0d47c502d',1,'DEFINE_int32(profile_speed, 1000,&quot;If PROFILER_ENABLED was set in CMake or Makefile.config files, OpenPose will show some&quot;&quot; runtime statistics at this frame number.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a10efaeb1ea3a8478388cc7d0bfd4e59e',1,'DEFINE_int32(camera,-1,&quot;The camera index for cv::VideoCapture. Integer in the range [0, 9]. Select a negative&quot;&quot; number (by default), to auto-detect and open the first available camera.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#ab41c02abe3634f0db65123ecda964a31',1,'DEFINE_int32(flir_camera_index,-1,&quot;Select -1 (default) to run on all detected flir cameras at once. Otherwise, select the flir&quot;&quot; camera index to run, where 0 corresponds to the detected flir camera with the lowest&quot;&quot; serial number, and `n` to the `n`-th lowest serial number camera.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a6c9c8a5843dd8b93e009bf29dc31cde2',1,'DEFINE_int32(frame_rotate, 0,&quot;Rotate each frame, 4 possible values: 0, 90, 180, 270.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a284252d3d255ad5e5c35815d720fd67a',1,'DEFINE_int32(num_gpu,-1,&quot;The number of GPU devices to use. If negative, it will use all the available GPUs in your&quot;&quot; machine.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a8511765700f652000f2c1c2b1a5df9f9',1,'DEFINE_int32(num_gpu_start, 0,&quot;GPU device start number.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a485d9b07e65fe81454f5f0bdc2d33278',1,'DEFINE_int32(keypoint_scale, 0,&quot;Scaling of the (x,y) coordinates of the final pose data array, i.e., the scale of the (x,y)&quot;&quot; coordinates that will be saved with the `write_json` &amp; `write_keypoint` flags.&quot;&quot; Select `0` to scale it to the original source resolution; `1`to scale it to the net output&quot;&quot; size (set with `net_resolution`); `2` to scale it to the final output size (set with&quot;&quot; `resolution`); `3` to scale it in the range [0,1], where (0,0) would be the top-left&quot;&quot; corner of the image, and (1,1) the bottom-right one; and 4 for range [-1,1], where&quot;&quot; (-1,-1) would be the top-left corner of the image, and (1,1) the bottom-right one. Non&quot;&quot; related with `scale_number` and `scale_gap`.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#aa5a1826a500d7131fefb480ccd1713fb',1,'DEFINE_int32(number_people_max,-1,&quot;This parameter will limit the maximum number of people detected, by keeping the people with&quot;&quot; top scores. The score is based in person area over the image, body part score, as well as&quot;&quot; joint score (between each pair of connected body parts). Useful if you know the exact&quot;&quot; number of people in the scene, so it can remove false positives (if all the people have&quot;&quot; been detected. However, it might also include false negatives by removing very small or&quot;&quot; highly occluded people. -1 will keep them all.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a77dc415b04f205a67291fc4b4edeba9b',1,'DEFINE_int32(body, 1,&quot;Select 0 to disable body keypoint detection (e.g., for faster but less accurate face&quot;&quot; keypoint detection, custom hand detector, etc.), 1 (default) for body keypoint&quot;&quot; estimation, and 2 to disable its internal body pose estimation network but still&quot;&quot; still run the greedy association parsing algorithm&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a1edea5f45026b353b6e6cc3b196767a0',1,'DEFINE_int32(scale_number, 1,&quot;Number of scales to average.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#aa80e5f9914dd35c852941282aa229b21',1,'DEFINE_int32(heatmaps_scale, 2,&quot;Set 0 to scale op::Datum::poseHeatMaps in the range [-1,1], 1 for [0,1]; 2 for integer&quot;&quot; rounded [0,255]; and 3 for no scaling.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#ad49ce99be06b3819f6531a73152bfe0c',1,'DEFINE_int32(face_detector, 0,&quot;Kind of face rectangle detector. Select 0 (default) to select OpenPose body detector (most&quot;&quot; accurate one and fastest one if body is enabled), 1 to select OpenCV face detector (not&quot;&quot; implemented for hands), 2 to indicate that it will be provided by the user, or 3 to&quot;&quot; also apply hand tracking (only for hand). Hand tracking might improve hand keypoint&quot;&quot; detection for webcam (if the frame rate is high enough, i.e., &gt;7 FPS per GPU) and video.&quot;&quot; This is not person ID tracking, it simply looks for hands in positions at which hands were&quot;&quot; located in previous frames, but it does not guarantee the same person ID among frames.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#ad3ca392070712230d360f606deffe1f9',1,'DEFINE_int32(hand_detector, 0,&quot;Kind of hand rectangle detector. Analogous to `--face_detector`.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a311e487137e17445e6939abb7cc0cf8f',1,'DEFINE_int32(hand_scale_number, 1,&quot;Analogous to `scale_number` but applied to the hand keypoint detector. Our best results&quot;&quot; were found with `hand_scale_number` = 6 and `hand_scale_range` = 0.4.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#ae8a2a66d46f0e4490912e2cb702695e4',1,'DEFINE_int32(3d_min_views,-1,&quot;Minimum number of views required to reconstruct each keypoint. By default (-1), it will&quot;&quot; require max(2, min(4, #cameras-1)) cameras to see the keypoint in order to reconstruct&quot;&quot; it.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a891890dc93264aae0b8df16f80fce32d',1,'DEFINE_int32(3d_views,-1,&quot;Complementary option for `--image_dir` or `--video`. OpenPose will read as many images per&quot;&quot; iteration, allowing tasks such as stereo camera processing (`--3d`). Note that&quot;&quot; `--camera_parameter_path` must be set. OpenPose must find as many `xml` files in the&quot;&quot; parameter folder as this number indicates.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#afdfef14901f7b5e324d6983845f5ab50',1,'DEFINE_int32(tracking,-1,&quot;Experimental, not available yet. Whether to enable people tracking across frames. The&quot;&quot; value indicates the number of frames where tracking is run between each OpenPose keypoint&quot;&quot; detection. Select -1 (default) to disable it or 0 to run simultaneously OpenPose keypoint&quot;&quot; detector and tracking for potentially higher accurary than only OpenPose.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a072bd893f4003b48bc7c99735eeeed39',1,'DEFINE_int32(ik_threads, 0,&quot;Experimental, not available yet. Whether to enable inverse kinematics (IK) from 3-D&quot;&quot; keypoints to obtain 3-D joint angles. By default (0 threads), it is disabled. Increasing&quot;&quot; the number of threads will increase the speed but also the global system latency.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a4cead735de5b43cfcae5c1139df3be1a',1,'DEFINE_int32(part_to_show, 0,&quot;Prediction channel to visualize (default: 0). 0 for all the body parts, 1-18 for each body&quot;&quot; part heat map, 19 for the background heat map, 20 for all the body part heat maps&quot;&quot; together, 21 for all the PAFs, 22-40 for each body part pair PAF.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a2aac3e05431b81d298fdbd7f701dcd5e',1,'DEFINE_int32(render_pose,-1,&quot;Set to 0 for no rendering, 1 for CPU rendering (slightly faster), and 2 for GPU rendering&quot;&quot; (slower but greater functionality, e.g., `alpha_X` flags). If -1, it will pick CPU if&quot;&quot; CPU_ONLY is enabled, or GPU if CUDA is enabled. If rendering is enabled, it will render&quot;&quot; both `outputData` and `cvOutputData` with the original image and desired body part to be&quot;&quot; shown (i.e., keypoints, heat maps or PAFs).&quot;):&#160;flags.hpp'],['../flags_8hpp.html#ad0269da28dc2033e23b8ea84b7e793a2',1,'DEFINE_int32(face_render,-1,&quot;Analogous to `render_pose` but applied to the face. Extra option: -1 to use the same&quot;&quot; configuration that `render_pose` is using.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#ada5b7fef5063818fd668359e9e0b0504',1,'DEFINE_int32(hand_render,-1,&quot;Analogous to `render_pose` but applied to the hand. Extra option: -1 to use the same&quot;&quot; configuration that `render_pose` is using.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a9a34e10f75069cf3283e535a77006775',1,'DEFINE_int32(display,-1,&quot;Display mode: -1 for automatic selection; 0 for no display (useful if there is no X server&quot;&quot; and/or to slightly speed up the processing if visual output is not required); 2 for 2-D&quot;&quot; display; 3 for 3-D display (if `--3d` enabled); and 1 for both 2-D and 3-D display.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a992f5da4412bb8ebcf3bc8b96c2d08e2',1,'DEFINE_int32(write_coco_json_variants, 1,&quot;Add 1 for body, add 2 for foot, 4 for face, and/or 8 for hands. Use 0 to use all the&quot;&quot; possible candidates. E.g., 7 would mean body+foot+face COCO JSON.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a39756aa6d6911435a326e18541db970a',1,'DEFINE_int32(write_coco_json_variant, 0,&quot;Currently, this option is experimental and only makes effect on car JSON generation. It&quot;&quot; selects the COCO variant for cocoJsonSaver.&quot;):&#160;flags.hpp']]],
  ['define_5fstring',['DEFINE_string',['../flags_8hpp.html#a9e7b1394aea185360a1fe19cf4e20a89',1,'DEFINE_string(camera_resolution,&quot;-1x-1&quot;,&quot;Set the camera resolution (either `--camera` or `--flir_camera`). `-1x-1` will use the&quot;&quot; default 1280x720 for `--camera`, or the maximum flir camera resolution available for&quot;&quot; `--flir_camera`&quot;):&#160;flags.hpp'],['../flags_8hpp.html#aab02d4078b5f7999a582d9c5f4248676',1,'DEFINE_string(video,&quot;&quot;,&quot;Use a video file instead of the camera. Use `examples/media/video.avi` for our default&quot;&quot; example video.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a7773e867133822f5601899975dc06adb',1,'DEFINE_string(image_dir,&quot;&quot;,&quot;Process a directory of images. Use `examples/media/` for our default example folder with 20&quot;&quot; images. Read all standard formats (jpg, png, bmp, etc.).&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a5db17b8bc6df4fe40b556af7157dcbf7',1,'DEFINE_string(ip_camera,&quot;&quot;,&quot;String with the IP camera URL. It supports protocols like RTSP and HTTP.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a39629f56f95f881172962f875e3b22d5',1,'DEFINE_string(camera_parameter_path,&quot;models/cameraParameters/flir/&quot;,&quot;String with the folder where the camera parameters are located. If there&quot;&quot; is only 1 XML file (for single video, webcam, or images from the same camera), you must&quot;&quot; specify the whole XML file path (ending in .xml).&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a9ab689ebe20a261b20587af79123e79a',1,'DEFINE_string(model_folder,&quot;models/&quot;,&quot;Folder path (absolute or relative) where the models (pose, face, ...) are located.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#ae57d02571def7e15ee7a04e2ce6a1b2a',1,'DEFINE_string(prototxt_path,&quot;&quot;,&quot;The combination `--model_folder` + `--prototxt_path` represents the whole path to the&quot;&quot; prototxt file. If empty, it will use the default OpenPose ProtoTxt file.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a99854eafce10ce571da0b08650bad652',1,'DEFINE_string(caffemodel_path,&quot;&quot;,&quot;The combination `--model_folder` + `--caffemodel_path` represents the whole path to the&quot;&quot; caffemodel file. If empty, it will use the default OpenPose CaffeModel file.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a85be61a31eaa438a7e9c7d2baf51da47',1,'DEFINE_string(output_resolution,&quot;-1x-1&quot;,&quot;The image resolution (display and output). Use \&quot;-1x-1\&quot; to force the program to use the&quot;&quot; input image resolution.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a055e1e0a1618e96f156f32278b41d3e4',1,'DEFINE_string(model_pose,&quot;BODY_25&quot;,&quot;Model to be used. E.g., `COCO` (18 keypoints), `MPI` (15 keypoints, ~10% faster), &quot;&quot;`MPI_4_layers` (15 keypoints, even faster but less accurate).&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a66d6d5c07371179c3702dbd1da9d9bd3',1,'DEFINE_string(net_resolution,&quot;-1x368&quot;,&quot;Multiples of 16. If it is increased, the accuracy potentially increases. If it is&quot;&quot; decreased, the speed increases. For maximum speed-accuracy balance, it should keep the&quot;&quot; closest aspect ratio possible to the images or videos to be processed. Using `-1` in&quot;&quot; any of the dimensions, OP will choose the optimal aspect ratio depending on the user&apos;s&quot;&quot; input value. E.g., the default `-1x368` is equivalent to `656x368` in 16:9 resolutions,&quot;&quot; e.g., full HD (1980x1080) and HD (1280x720) resolutions.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#af5ee5f61f0d36a03bb8647408f5e236b',1,'DEFINE_string(face_net_resolution,&quot;368x368&quot;,&quot;Multiples of 16 and squared. Analogous to `net_resolution` but applied to the face keypoint&quot;&quot; detector. 320x320 usually works fine while giving a substantial speed up when multiple&quot;&quot; faces on the image.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#afaf97bbf6a49576782d25147bc865bed',1,'DEFINE_string(hand_net_resolution,&quot;368x368&quot;,&quot;Multiples of 16 and squared. Analogous to `net_resolution` but applied to the hand keypoint&quot;&quot; detector.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a7a3597e9216885470199ca1578eb7f69',1,'DEFINE_string(write_images,&quot;&quot;,&quot;Directory to write rendered frames in `write_images_format` image format.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a6957bf419a0ca3478948a62a3ce5ecf0',1,'DEFINE_string(write_images_format,&quot;png&quot;,&quot;File extension and format for `write_images`, e.g., png, jpg or bmp. Check the OpenCV&quot;&quot; function cv::imwrite for all compatible extensions.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a24b4eba10a7f638d962c5adf96ca238e',1,'DEFINE_string(write_video,&quot;&quot;,&quot;Full file path to write rendered frames in motion JPEG video format. It might fail if the&quot;&quot; final path does not finish in `.avi`. It internally uses cv::VideoWriter. Flag&quot;&quot; `write_video_fps` controls FPS. Alternatively, the video extension can be `.mp4`,&quot;&quot; resulting in a file with a much smaller size and allowing `--write_video_with_audio`.&quot;&quot; However, that would require: 1) Ubuntu or Mac system, 2) FFmpeg library installed&quot;&quot; (`sudo apt-get install ffmpeg`), 3) the creation temporarily of a folder with the same&quot;&quot; file path than the final video (without the extension) to storage the intermediate frames&quot;&quot; that will later be used to generate the final MP4 video.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#acd050c5cca77d3123bbf56064d0d7d9c',1,'DEFINE_string(write_video_3d,&quot;&quot;,&quot;Analogous to `--write_video`, but applied to the 3D output.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a185ab92813bb7188e013f16e75225ec3',1,'DEFINE_string(write_video_adam,&quot;&quot;,&quot;Experimental, not available yet. Analogous to `--write_video`, but applied to Adam model.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a9aa48b2ab293842bc42b96df9e97c9b8',1,'DEFINE_string(write_json,&quot;&quot;,&quot;Directory to write OpenPose output in JSON format. It includes body, hand, and face pose&quot;&quot; keypoints (2-D and 3-D), as well as pose candidates (if `--part_candidates` enabled).&quot;):&#160;flags.hpp'],['../flags_8hpp.html#ae4bd5fa995ecb62122be58c955a3465a',1,'DEFINE_string(write_coco_json,&quot;&quot;,&quot;Full file path to write people pose data with JSON COCO validation format. If foot, face,&quot;&quot; hands, etc. JSON is also desired (`--write_coco_json_variants`), they are saved with&quot;&quot; different file name suffix.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#aa3fe7c4c07492e6553a6c2d25ebd76b4',1,'DEFINE_string(write_heatmaps,&quot;&quot;,&quot;Directory to write body pose heatmaps in PNG format. At least 1 `add_heatmaps_X` flag&quot;&quot; must be enabled.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a242473077549869f06534e8a9ea1ddd6',1,'DEFINE_string(write_heatmaps_format,&quot;png&quot;,&quot;File extension and format for `write_heatmaps`, analogous to `write_images_format`.&quot;&quot; For lossless compression, recommended `png` for integer `heatmaps_scale` and `float` for&quot;&quot; floating values.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#ad8c5173beb83c0f9996362b3a3fba820',1,'DEFINE_string(write_keypoint,&quot;&quot;,&quot;(Deprecated, use `write_json`) Directory to write the people pose keypoint data. Set format&quot;&quot; with `write_keypoint_format`.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a5aaba99bdb163516d0297d2e09dd0c7d',1,'DEFINE_string(write_keypoint_format,&quot;yml&quot;,&quot;(Deprecated, use `write_json`) File extension and format for `write_keypoint`: json, xml,&quot;&quot; yaml &amp; yml. Json not available for OpenCV &lt; 3.0, use `write_json` instead.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a72c09e09c94b67f88b53e1a94e7bfe0f',1,'DEFINE_string(write_bvh,&quot;&quot;,&quot;Experimental, not available yet. E.g., `~/Desktop/mocapResult.bvh`.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a63936bd2bc53a453ba74066289ab9d29',1,'DEFINE_string(udp_host,&quot;&quot;,&quot;Experimental, not available yet. IP for UDP communication. E.g., `192.168.0.1`.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#aa7b1c758c6d6e35c3227994a9ced0236',1,'DEFINE_string(udp_port,&quot;8051&quot;,&quot;Experimental, not available yet. Port number for UDP communication.&quot;):&#160;flags.hpp']]],
  ['define_5ftemplate_5fdatum',['DEFINE_TEMPLATE_DATUM',['../datum_8hpp.html#ad11d52b69bc54e48ceb2f5787f700431',1,'datum.hpp']]],
  ['define_5fuint64',['DEFINE_uint64',['../flags_8hpp.html#a89127a571b2b18ba05912d7b06ffb2ef',1,'DEFINE_uint64(frame_first, 0,&quot;Start on desired frame number. Indexes are 0-based, i.e., the first frame has index 0.&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a22572531e5a4896c510639ac57cf522c',1,'DEFINE_uint64(frame_step, 1,&quot;Step or gap between processed frames. E.g., `--frame_step 5` would read and process frames&quot;&quot; 0, 5, 10, etc..&quot;):&#160;flags.hpp'],['../flags_8hpp.html#a158227abc2af90abaec523a784b40fa8',1,'DEFINE_uint64(frame_last,-1,&quot;Finish on desired frame number. Select -1 to disable. Indexes are 0-based, e.g., if set to&quot;&quot; 10, it will process 11 frames (0-10).&quot;):&#160;flags.hpp']]],
  ['delete_5fcopy',['DELETE_COPY',['../classop_1_1_face_cpu_renderer.html#a233f2a83930d07e4d420b43c8a660f32',1,'op::FaceCpuRenderer::DELETE_COPY()'],['../classop_1_1_hand_cpu_renderer.html#a66a7d318b240c73687320bf092363409',1,'op::HandCpuRenderer::DELETE_COPY()'],['../classop_1_1_sub_thread_no_queue.html#a43504502c36461305d656fb87b914749',1,'op::SubThreadNoQueue::DELETE_COPY()'],['../macros_8hpp.html#abef96b5dd35dd9d44ad27ddf0e2f5f2e',1,'DELETE_COPY():&#160;macros.hpp']]],
  ['deleter',['Deleter',['../classcl_1_1detail_1_1_deleter.html',1,'cl::detail']]],
  ['deleter',['Deleter',['../classcl_1_1detail_1_1_deleter.html#a899859732bb1c5f296f3e4f05ca6a39d',1,'cl::detail::Deleter']]],
  ['destroy',['destroy',['../classcl_1_1_s_v_m_allocator.html#a86498cce5cce2d8ac1c509862eb28977',1,'cl::SVMAllocator']]],
  ['detectfaces',['detectFaces',['../classop_1_1_face_detector.html#ada0720f8c51fc6226c5139eb2ccaae69',1,'op::FaceDetector::detectFaces()'],['../classop_1_1_face_detector_open_c_v.html#a3cbd067534f06315ab8a2332f7ba246a',1,'op::FaceDetectorOpenCV::detectFaces()']]],
  ['detecthands',['detectHands',['../classop_1_1_hand_detector.html#aaa1c303a5dede04b68acc1a9cedc2568',1,'op::HandDetector::detectHands()'],['../classop_1_1_hand_detector_from_txt.html#a1e6ba23fa1486e92a3bdca36b2e86d22',1,'op::HandDetectorFromTxt::detectHands()']]],
  ['detector',['detector',['../structop_1_1_wrapper_struct_face.html#a30d45f383e5c9d72709b5281f24f1ed0',1,'op::WrapperStructFace::detector()'],['../structop_1_1_wrapper_struct_hand.html#a2759e92ee811d7a8eb69e1b7eba29d08',1,'op::WrapperStructHand::detector()'],['../namespaceop.html#a1070db47220e17cf37df40411350f6fb',1,'op::Detector()']]],
  ['device',['Device',['../classcl_1_1_device.html#a6131ff3eb77c31dfba11091a3c0f4235',1,'cl::Device::Device()'],['../classcl_1_1_device.html#ad28b573c8a28028a06ded4e1dc7fa725',1,'cl::Device::Device(const cl_device_id &amp;device, bool retainObject=false)'],['../classcl_1_1_device.html#a8445328fa0af11c93f20615f820b93fc',1,'cl::Device::Device(const Device &amp;dev)'],['../classcl_1_1_device.html#a9a8f38bb1636628bdb31d3a47c8cee36',1,'cl::Device::Device(Device &amp;&amp;dev) CL_HPP_NOEXCEPT_']]],
  ['device',['Device',['../classcl_1_1_device.html',1,'cl']]],
  ['devicecommandqueue',['DeviceCommandQueue',['../classcl_1_1_device_command_queue.html#ab58e477e1a9bf099e1faf77565e80856',1,'cl::DeviceCommandQueue::DeviceCommandQueue()'],['../classcl_1_1_device_command_queue.html#a796862188d423d2cfd1e90c4fafc5d5f',1,'cl::DeviceCommandQueue::DeviceCommandQueue(DeviceQueueProperties properties, cl_int *err=NULL)'],['../classcl_1_1_device_command_queue.html#a098b1a3d3485828fde04fc7f10f8e1c4',1,'cl::DeviceCommandQueue::DeviceCommandQueue(const Context &amp;context, const Device &amp;device, DeviceQueueProperties properties=DeviceQueueProperties::None, cl_int *err=NULL)'],['../classcl_1_1_device_command_queue.html#a16613c9133f453851d72c6793d522d81',1,'cl::DeviceCommandQueue::DeviceCommandQueue(const Context &amp;context, const Device &amp;device, cl_uint queueSize, DeviceQueueProperties properties=DeviceQueueProperties::None, cl_int *err=NULL)'],['../classcl_1_1_device_command_queue.html#acaf1dee2f55faeac05b2c1c66daf51c2',1,'cl::DeviceCommandQueue::DeviceCommandQueue(const cl_command_queue &amp;commandQueue, bool retainObject=false)'],['../classcl_1_1_device_command_queue.html#a897785d635ca36d68444435617ad6fc1',1,'cl::DeviceCommandQueue::DeviceCommandQueue(const DeviceCommandQueue &amp;queue)'],['../classcl_1_1_device_command_queue.html#ac1cc85eaacd3a27a57b34471b41b073c',1,'cl::DeviceCommandQueue::DeviceCommandQueue(DeviceCommandQueue &amp;&amp;queue) CL_HPP_NOEXCEPT_']]],
  ['devicecommandqueue',['DeviceCommandQueue',['../classcl_1_1_device_command_queue.html',1,'cl']]],
  ['devicequeueproperties',['DeviceQueueProperties',['../namespacecl.html#a000ce6769841b11cf56253f7a0344277',1,'cl']]],
  ['diff_5fat',['diff_at',['../classop_1_1_array_cpu_gpu.html#af0dbfd2dc21eaf59e6574c26f6f21040',1,'op::ArrayCpuGpu']]],
  ['difference_5ftype',['difference_type',['../classcl_1_1_s_v_m_allocator.html#aed0caac86c149d127e6d686a764e2073',1,'cl::SVMAllocator']]],
  ['dimensions',['dimensions',['../classcl_1_1_n_d_range.html#a1360e9bdd3604fd06069d1fd981eed6b',1,'cl::NDRange']]],
  ['disabled',['Disabled',['../namespaceop.html#a53e7c7ac399de4698e1e609ec0474a09ab9f5c797ebbf55adccdd8539a65a0241',1,'op']]],
  ['disablemultithreading',['disableMultiThreading',['../classop_1_1_wrapper_t.html#a6ba81304df06fbec71103973ce0041c5',1,'op::WrapperT']]],
  ['display2d',['Display2D',['../namespaceop.html#ae52707752b1872b39f0306cc4f6c6ae6a3bd9369403112127ae7db2f866002be2',1,'op']]],
  ['display3d',['Display3D',['../namespaceop.html#ae52707752b1872b39f0306cc4f6c6ae6ae18221460ca8434295f980225fd6a91b',1,'op']]],
  ['displayadam',['DisplayAdam',['../namespaceop.html#ae52707752b1872b39f0306cc4f6c6ae6a442304e26339521bc296bdc47ff5fddf',1,'op']]],
  ['displayall',['DisplayAll',['../namespaceop.html#ae52707752b1872b39f0306cc4f6c6ae6a105036ef087117869f656cd72bfd8dd6',1,'op']]],
  ['displayframe',['displayFrame',['../classop_1_1_frame_displayer.html#ada237c384d55d6e141dce886e6fe97e3',1,'op::FrameDisplayer::displayFrame(const cv::Mat &amp;frame, const int waitKeyValue=-1)'],['../classop_1_1_frame_displayer.html#ac047ba552b5c1a9b9a23b973484ff931',1,'op::FrameDisplayer::displayFrame(const std::vector&lt; cv::Mat &gt; &amp;frames, const int waitKeyValue=-1)']]],
  ['displaymode',['displayMode',['../structop_1_1_wrapper_struct_gui.html#a2a979a7daa368cc847ae6d9a168ff556',1,'op::WrapperStructGui::displayMode()'],['../namespaceop.html#ae52707752b1872b39f0306cc4f6c6ae6',1,'op::DisplayMode()']]],
  ['dlog',['dLog',['../namespaceop.html#a4eb991aa18818196d35c66455a437a32',1,'op']]],
  ['drawgridcorners',['drawGridCorners',['../namespaceop.html#a1a0199d6781778e6f50213c816189f26',1,'op']]]
];
